(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{502:function(a,s,t){"use strict";t.r(s);var r=t(2),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"js常见数字问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js常见数字问题"}},[a._v("#")]),a._v(" JS常见数字问题")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 0.1 + 0.2 !== 0.3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 9007199254740992 === 9007199254740993 true // java返回long数字溢出问题")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3. NaN === NaN false")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h2",{attrs:{id:"js-number-编码方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js-number-编码方式"}},[a._v("#")]),a._v(" JS Number 编码方式")]),a._v(" "),s("ul",[s("li",[a._v("JavaScript Number类型是一个双精度64位二进制格式的IEEE754值，类似于Java或C#中的double。这意味着它可以表示分数值，但存储的数字的大小和精度有一些限制")]),a._v(" "),s("li",[a._v("请注意，NaN值是由程序表达式NaN生成的。在某些实现中，外部代码可能能够检测各种不同的非数字值之间的差异，但这种行为是由实现定义的；对于ECMAScript代码来说，所有NaN值彼此之间是无法区分的")])]),a._v(" "),s("h2",{attrs:{id:"术语解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#术语解释"}},[a._v("#")]),a._v(" 术语解释")]),a._v(" "),s("h3",{attrs:{id:"什么是ieee-754"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是ieee-754"}},[a._v("#")]),a._v(" 什么是IEEE 754？")]),a._v(" "),s("ul",[s("li",[a._v("IEEE754是由电气和电子工程师协会（IEEE）于1985年制定的浮点数运算技术标准。 （目前：IEEE 754-2019）")]),a._v(" "),s("li",[a._v("这个标准定义了表示浮点数的格式（包括负零-0）与次正规数（Denormalized Number），一些特殊数值（无穷（Inf）与非数值（NaN）），以及这些数值的“浮点数运算符”；它也指明了四种数值舍入规则和五种例外状况（包括例外发生的时机与处理方式）")]),a._v(" "),s("li",[a._v("IEEE 754规定，对于规定了四种表示浮点数值的方式：单精确度（32位）、双精确度（64位）、延伸单精确度（43比特以上，很少使用）与延伸双精确度（79比特以上，通常以80位实现）")])]),a._v(" "),s("h3",{attrs:{id:"定点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定点数"}},[a._v("#")]),a._v(" 定点数")]),a._v(" "),s("ul",[s("li",[a._v("在定点数表达法中，其小数点固定地位于实数所有数字中间的某个位置。例如，货币的表达就可以采用这种表达方式，如 55.00 或者 00.55 可以用于表达具有 4 位精度，小数点后有两位的货币值。由于小数点位置固定，所以可以直接用 4 位数值来表达相应的数值")]),a._v(" "),s("li",[a._v("缺点：就在于其形式过于僵硬，固定的小数点位置决定了固定位数的整数部分和小数部分，不利于同时表达特别大的数或者特别小的数")]),a._v(" "),s("li",[a._v("eg： Number.prototype.toFixed返回的就是十进制小数定点表示法的字符串")])]),a._v(" "),s("h3",{attrs:{id:"浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数"}},[a._v("#")]),a._v(" 浮点数")]),a._v(" "),s("blockquote",[s("p",[a._v("浮点数利用指数达到了浮动小数点的效果，从而可以灵活地表达更大范围的实数")])]),a._v(" "),s("ul",[s("li",[a._v("符号位（sign）：0表示正数，而1表示负数。")]),a._v(" "),s("li",[a._v("偏移指数（exponent）：指数字段需要同时表示正指数和负指数。为了得到存储的指数，实际指数会加上一个偏差(-1022 to 1023)。")]),a._v(" "),s("li",[a._v("尾数（mantissa）：尾数（也称为有效数）是表示实际值（有效位数）的数字部分。")])]),a._v(" "),s("h3",{attrs:{id:"双精度浮点数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双精度浮点数"}},[a._v("#")]),a._v(" 双精度浮点数")]),a._v(" "),s("p",[s("img",{attrs:{src:"IEEE-number_files/2.jpg",alt:"双精度"}})]),a._v(" "),s("h3",{attrs:{id:"十进制数转为754格式的运算过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十进制数转为754格式的运算过程"}},[a._v("#")]),a._v(" 十进制数转为754格式的运算过程")]),a._v(" "),s("div",{staticClass:"language-txt line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-txt"}},[s("code",[a._v("85.125\n85 = 1010101\n0.125 = 001\n85.125 = 1010101.001\n       =1.010101001 x 2^6 \nsign = 0 \n\n0.125->0.001的计算过程：\n0.125 * 2 = 0.25 整数位：0\n0.25 * 2 = 0.5 整数位：0\n0.5 * 2 = 1 整数位：1\n所以就是0.001\n\n转换为754双精度格式：\n偏移指数：1023+6=1029\n转为二进制：1029 = 10000000101\n尾数 = 010101001，不足52位，就在后面补0\n\n最终结果：0 10000000101 0101010010000000000000000000000000000000000000000000\n16进制形式：4055480000000000 \n\n0.3转为二进制计算过程:\n0.3 * 2 = 0.6 整数位: 0\n0.6 * 2 = 1.2 整数位: 1\n0.2 * 2 = 0.4 整数位: 0\n0.4 * 2 = 0.8 整数位: 0\n0.8 * 2 = 1.6 整数位: 1\n0.6 * 2 = 1.2 整数位: 1\n0.2 * 2 = 0.4 整数位: 0\n...开始不断循环\n所以0.3 约等于 0.0100110011001...1001，所以不能准确表示\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br")])]),s("h3",{attrs:{id:"运算例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算例子"}},[a._v("#")]),a._v(" 运算例子")]),a._v(" "),s("ul",[s("li",[s("img",{attrs:{src:"IEEE-number_files/1.jpg",alt:"0.1"}})]),a._v(" "),s("li",[s("img",{attrs:{src:"IEEE-number_files/5.jpg",alt:"0.2"}})])]),a._v(" "),s("h3",{attrs:{id:"指数偏移常数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指数偏移常数"}},[a._v("#")]),a._v(" 指数偏移常数")]),a._v(" "),s("p",[s("img",{attrs:{src:"IEEE-number_files/3.jpg",alt:"偏移"}})]),a._v(" "),s("h3",{attrs:{id:"_0-1-0-2运算过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-0-2运算过程"}},[a._v("#")]),a._v(" 0.1+0.2运算过程")]),a._v(" "),s("ul",[s("li",[s("img",{attrs:{src:"IEEE-number_files/4.jpg",alt:"运算过程"}})])]),a._v(" "),s("h3",{attrs:{id:"能够表示的最大整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#能够表示的最大整数"}},[a._v("#")]),a._v(" 能够表示的最大整数")]),a._v(" "),s("blockquote",[s("p",[a._v("大整数的精度丢失和浮点数本质上是一样的，尾数位最大是 52 位，因此 JS 中能精准表示的最大整数是 Math.pow(2, 53) - 1，十进制即 9007199254740991（Number.MAX_SAFE_INTEGER）(16位)\n解决办法：让后端返回Long形整数的时候，转成字符串\n后端返回科学计数法字符串\n平时开发自己运算时，可以使用big.js,BigInt,json-bigint等方式解决")])]),a._v(" "),s("h3",{attrs:{id:"小数的产生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小数的产生"}},[a._v("#")]),a._v(" 小数的产生")]),a._v(" "),s("ul",[s("li",[a._v("用户输入小数，小数加法，小数乘整数（可以通过乘1000解决）")]),a._v(" "),s("li",[a._v("数字除法运算产生小数，或者乘百分数（需要舍入）")])]),a._v(" "),s("h2",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[a._v("#")]),a._v(" 常量")]),a._v(" "),s("ul",[s("li",[a._v("Number.EPSILON: 是1和大于1的最小值之间的差值的数值，该数值可表示为数值，约为2.2204460492503130808472633361816×10^-16。0.1 + 0.2 - 0.3 < Number.EPSILON")]),a._v(" "),s("li",[a._v("Number.isSafeInteger: If abs(ℝ(number)) ≤ 2^53 - 1, return true.")]),a._v(" "),s("li",[a._v("Number.MAX_SAFE_INTEGER: 9007199254740991(2^53 - 1)")]),a._v(" "),s("li",[a._v("Number.MIN_SAFE_INTEGER: -9007199254740991(-(2^53 - 1))")]),a._v(" "),s("li",[a._v("Number.MAX_VALUE: 1.7976931348623157 × 10^308")]),a._v(" "),s("li",[a._v("Number.MIN_VALUE: 5 × 10^-324")])]),a._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",target:"_blank",rel:"noopener noreferrer"}},[a._v("MDN JS Number"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://tc39.es/ecma262/#sec-number-objects",target:"_blank",rel:"noopener noreferrer"}},[a._v("ECMASCript Number标准"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.cnblogs.com/hai-long/p/12552148.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("为什么计算机编程语言中：0.1+0.2不等于0.3"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"http://c.biancheng.net/view/314.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("IEEE 754浮点数标准详解"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://fengmumu1.github.io/2018/06/30/js-number/",target:"_blank",rel:"noopener noreferrer"}},[a._v("JavaScript中的数字存储"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);